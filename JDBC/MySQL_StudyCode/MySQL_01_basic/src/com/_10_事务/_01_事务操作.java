package com._10_事务;

//  事务
//
//  todo 1.什么是事务
//  事务（Transaction）由一组相关的数据库操作指令组成，
//  这些操作要么全部执行，要么全部不执行，它是一个不可分割的工作单位。
//  事务的主要目的是确保数据库的完整性和一致性，即使多个用户并发访问数据库也能保持这些特性。
//
//
//  todo 2.事务的ACID特性
//  事务有四个特性，通常称为ACID特性：
//  ①原子性（Atomicity）：事务被视为一个不可分割的最小工作单元，其中的操作要么全都完成，要么全都不完成。
//  ②一致性（Consistency）：事务必须使数据库从一个一致性状态变换到另一个一致性状态。即一个事务执行之前和执行之后都必须处于一致性状态。
//  ③隔离性（Isolation）：在事务进行过程中，事务的中间状态对其他事务是不可见的。
//  ④持久性（Durability）：一旦事务提交，则其结果就是永久性的，即使系统崩溃也不会丢失。
//
//
//
//  todo 3.事务操作语法【重点】
//  开启事务：   start transaction;  （或者：set autocommit = off;）
//  设置保存点：  savepoint 保存点名;
//  回退事务到保存点：rollback to 保存点名;
//  回退全部事务： rollback;
//  提交事务：   commit;
//
//
//
//  todo 4.事务细节【重点】
//  ①当执行事务时，MySQL会在表上加锁，防止其它用户修改表的数据。
//
//  ②在事务提交前，可以创建多个保存点，也可以回退到任意存在的保存点。
//
//  ③当使用commit语句提交事务，所有操作均会生效，并自动删除所有保存点、释放锁。
//    因此，事务提交后就不能再回退了。
//
//  ④若先设置保存点A，再设置保存点B，之后回退到保存点A：
//    回退到A，则A点之后的全部操作均会撤回（包括设置保存点B的操作），此时B点已经不复存在。
//
//  ⑤用start transaction开启事务时，该事务会默认创建一个保存点，
//    之后使用rollback，会回退全部事务，即回退到该默认保存点
//
//  ⑥当不开启事务，默认情况下，所有操作都会自动提交，不能回滚。
//    除了使用start transaction语句开启事务以外，还能使用【set autocommit = off】来开启事务
//
//  ⑦MySQL的事务机制需要innodb的存储引擎下才可以使用，myisam等都不好使
//
//  ⑧事务的回滚，只能回滚对表中行数据的insert、update、delete等操作，
//    而不能回滚对数据库/表/视图的create、alter、drop操作
//

public class _01_事务操作 {
}
